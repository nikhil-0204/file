Implement a class Complex which
represents the Complex Number
data type. Implement thefollowing
1. Constructor (including a default
constructor which creates the
complex number 0+0i).
2. Overload operator+ to add two
complex numbers.
3. Overload operator* to multiply
two complex numbers.
4. Overload operators << and >> to
print and read Complex Numbers


#include<iostream>
using namespace std;

class complex
{
    public:
      int real, img;

   
      complex() {
          real = img = 0;
      }

    
      complex operator + (const complex& C2) {
          complex C3;
          C3.real = real + C2.real;
          C3.img = img + C2.img;
          return C3;
      }

   
      complex operator * (const complex& C2) {
          complex C3;
          C3.real = (real * C2.real) - (img * C2.img);  // (a + bi)(c + di) = (ac - bd) + (ad + bc)i
          C3.img = (real * C2.img) + (img * C2.real);
          return C3;
      }

      friend istream& operator >> (istream& is, complex& c);

  
      friend ostream& operator << (ostream& os, const complex& c);
};


istream& operator >> (istream& is, complex& c) {
    is >> c.real >> c.img;
    return is;
}


ostream& operator << (ostream& os, const complex& c) {
    os << c.real << "+" << c.img << "i";
    return os;
}

int main()
{
    complex c1, c2, c3;

  
    cout << "Enter first complex number (real and imaginary parts): ";
    cin >> c1;
    cout << "Enter second complex number (real and imaginary parts): ";
    cin >> c2;

   
    c3 = c1 + c2;


    cout << "Sum of complex numbers: " << c3 << endl;

  
    complex c4 = c1 * c2;
    cout << "Product of complex numbers: " << c4 << endl;

    return 0;
}